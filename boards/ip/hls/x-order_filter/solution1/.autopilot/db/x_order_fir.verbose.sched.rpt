

================================================================
== Vivado HLS Report for 'x_order_fir'
================================================================
* Date:           Mon Oct  7 01:59:21 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        x-order_filter
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.750|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------------------------------+-----+------+----------+-----------+-----------+-----------+----------+
        |                                                              |   Latency  | Iteration|  Initiation Interval  |    Trip   |          |
        |                           Loop Name                          | min |  max |  Latency |  achieved |   target  |   Count   | Pipelined|
        +--------------------------------------------------------------+-----+------+----------+-----------+-----------+-----------+----------+
        |- memcpy.fir_ctrl.ctrl                                        |    3|     3|         3|          1|          1|          2|    yes   |
        |- memcpy.x_order_fir(data_t*, data_t*, int*, int*)::coef.coe  |    ?|     ?|         3|          1|          1|          ?|    yes   |
        |- calc_loop                                                   |   21|  2047|         4|          2|          1| 10 ~ 1023 |    yes   |
        +--------------------------------------------------------------+-----+------+----------+-----------+-----------+-----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3
  * Pipeline-2: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 32
* Pipeline : 3
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1 : II = 1, D = 3, States = { 20 21 22 }
  Pipeline-2 : II = 2, D = 4, States = { 24 25 26 27 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	12  / (exitcond)
	10  / (!exitcond)
10 --> 
	11  / true
11 --> 
	9  / true
12 --> 
	13  / (!tmp)
	23  / (tmp)
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	23  / (exitcond1)
	21  / (!exitcond1)
21 --> 
	22  / true
22 --> 
	20  / true
23 --> 
	24  / true
24 --> 
	28  / (tmp_2)
	25  / (!tmp_2)
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	24  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 33 [1/1] (1.00ns)   --->   "%ctrl_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %ctrl)"   --->   Operation 33 'read' 'ctrl_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 34 [1/1] (1.00ns)   --->   "%coe_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %coe)"   --->   Operation 34 'read' 'coe_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%ctrl3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %ctrl_read, i32 2, i32 31)"   --->   Operation 35 'partselect' 'ctrl3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%coe1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %coe_read, i32 2, i32 31)"   --->   Operation 36 'partselect' 'coe1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 8.75>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_5 = zext i30 %ctrl3 to i64"   --->   Operation 37 'zext' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32* %gmem, i64 %tmp_5"   --->   Operation 38 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [7/7] (8.75ns)   --->   "%gmem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 2)" [fir_src/x_order_fir.cpp:43]   --->   Operation 39 'readreq' 'gmem_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 8.75>
ST_3 : Operation 40 [6/7] (8.75ns)   --->   "%gmem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 2)" [fir_src/x_order_fir.cpp:43]   --->   Operation 40 'readreq' 'gmem_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 8.75>
ST_4 : Operation 41 [5/7] (8.75ns)   --->   "%gmem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 2)" [fir_src/x_order_fir.cpp:43]   --->   Operation 41 'readreq' 'gmem_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 42 [4/7] (8.75ns)   --->   "%gmem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 2)" [fir_src/x_order_fir.cpp:43]   --->   Operation 42 'readreq' 'gmem_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 43 [3/7] (8.75ns)   --->   "%gmem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 2)" [fir_src/x_order_fir.cpp:43]   --->   Operation 43 'readreq' 'gmem_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 44 [2/7] (8.75ns)   --->   "%gmem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 2)" [fir_src/x_order_fir.cpp:43]   --->   Operation 44 'readreq' 'gmem_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_9 = zext i30 %coe1 to i64"   --->   Operation 45 'zext' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 46 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32* %gmem, i64 %tmp_9"   --->   Operation 46 'getelementptr' 'gmem_addr_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 47 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %gmem), !map !16"   --->   Operation 47 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 48 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %y_data), !map !25"   --->   Operation 48 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 49 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %y_user_V), !map !31"   --->   Operation 49 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 50 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %y_last_V), !map !35"   --->   Operation 50 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 51 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %x_data), !map !39"   --->   Operation 51 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 52 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %x_user_V), !map !43"   --->   Operation 52 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 53 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %x_last_V), !map !47"   --->   Operation 53 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @x_order_fir_str) nounwind"   --->   Operation 54 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %ctrl, [10 x i8]* @mode1, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 256, [1 x i8]* @bundle2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:26]   --->   Operation 55 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %y_data, i1* %y_user_V, i1* %y_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:27]   --->   Operation 56 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:28]   --->   Operation 57 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %gmem, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1024, [5 x i8]* @p_str2, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:29]   --->   Operation 58 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %coe, [10 x i8]* @mode, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 1024, [1 x i8]* @bundle, [6 x i8]* @p_str3, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:29]   --->   Operation 59 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %x_data, i1* %x_user_V, i1* %x_last_V, [5 x i8]* @p_str4, i32 1, i32 1, [5 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:30]   --->   Operation 60 'specinterface' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 61 [1/7] (8.75ns)   --->   "%gmem_addr_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr, i32 2)" [fir_src/x_order_fir.cpp:43]   --->   Operation 61 'readreq' 'gmem_addr_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 62 [1/1] (1.76ns)   --->   "br label %burst.rd.header" [fir_src/x_order_fir.cpp:43]   --->   Operation 62 'br' <Predicate = true> <Delay = 1.76>

State 9 <SV = 8> <Delay = 1.56>
ST_9 : Operation 63 [1/1] (0.00ns)   --->   "%i = phi i32 [ undef, %0 ], [ %fir_ctrl_1_1, %burst.rd.body ]"   --->   Operation 63 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 64 [1/1] (0.00ns)   --->   "%reload = phi i32 [ undef, %0 ], [ %reload_1, %burst.rd.body ]"   --->   Operation 64 'phi' 'reload' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 65 [1/1] (0.00ns)   --->   "%indvar = phi i2 [ 0, %0 ], [ %indvar_next, %burst.rd.body ]" [fir_src/x_order_fir.cpp:43]   --->   Operation 65 'phi' 'indvar' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 66 [1/1] (0.95ns)   --->   "%exitcond = icmp eq i2 %indvar, -2" [fir_src/x_order_fir.cpp:43]   --->   Operation 66 'icmp' 'exitcond' <Predicate = true> <Delay = 0.95> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 67 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 68 [1/1] (1.56ns)   --->   "%indvar_next = add i2 %indvar, 1" [fir_src/x_order_fir.cpp:43]   --->   Operation 68 'add' 'indvar_next' <Predicate = true> <Delay = 1.56> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %burst.rd.end, label %burst.rd.body" [fir_src/x_order_fir.cpp:43]   --->   Operation 69 'br' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_10 = trunc i2 %indvar to i1" [fir_src/x_order_fir.cpp:43]   --->   Operation 70 'trunc' 'tmp_10' <Predicate = (!exitcond)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 71 [1/1] (8.75ns)   --->   "%fir_ctrl_0 = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr)" [fir_src/x_order_fir.cpp:43]   --->   Operation 71 'read' 'fir_ctrl_0' <Predicate = (!exitcond)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 0.69>
ST_11 : Operation 72 [1/1] (0.00ns)   --->   "%burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_s) nounwind" [fir_src/x_order_fir.cpp:43]   --->   Operation 72 'specregionbegin' 'burstread_rbegin' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 73 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str8)" [fir_src/x_order_fir.cpp:43]   --->   Operation 73 'specpipeline' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 74 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([21 x i8]* @memcpy_OC_fir_ctrl_O)" [fir_src/x_order_fir.cpp:43]   --->   Operation 74 'specloopname' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 75 [1/1] (0.69ns)   --->   "%fir_ctrl_1_1 = select i1 %tmp_10, i32 %fir_ctrl_0, i32 %i" [fir_src/x_order_fir.cpp:43]   --->   Operation 75 'select' 'fir_ctrl_1_1' <Predicate = (!exitcond)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 76 [1/1] (0.69ns)   --->   "%reload_1 = select i1 %tmp_10, i32 %reload, i32 %fir_ctrl_0" [fir_src/x_order_fir.cpp:43]   --->   Operation 76 'select' 'reload_1' <Predicate = (!exitcond)> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_11 : Operation 77 [1/1] (0.00ns)   --->   "%burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_s, i32 %burstread_rbegin) nounwind" [fir_src/x_order_fir.cpp:43]   --->   Operation 77 'specregionend' 'burstread_rend' <Predicate = (!exitcond)> <Delay = 0.00>
ST_11 : Operation 78 [1/1] (0.00ns)   --->   "br label %burst.rd.header" [fir_src/x_order_fir.cpp:43]   --->   Operation 78 'br' <Predicate = (!exitcond)> <Delay = 0.00>

State 12 <SV = 9> <Delay = 3.45>
ST_12 : Operation 79 [1/1] (2.47ns)   --->   "%tmp = icmp eq i32 %reload, 0" [fir_src/x_order_fir.cpp:47]   --->   Operation 79 'icmp' 'tmp' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 80 [1/1] (0.00ns)   --->   "br i1 %tmp, label %._crit_edge, label %1" [fir_src/x_order_fir.cpp:47]   --->   Operation 80 'br' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node tmp_1)   --->   "%tmp_12 = shl i32 %i, 2" [fir_src/x_order_fir.cpp:48]   --->   Operation 81 'shl' 'tmp_12' <Predicate = (!tmp)> <Delay = 0.00>
ST_12 : Operation 82 [1/1] (2.55ns) (out node of the LUT)   --->   "%tmp_1 = add i32 4, %tmp_12" [fir_src/x_order_fir.cpp:48]   --->   Operation 82 'add' 'tmp_1' <Predicate = (!tmp)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 83 [1/1] (0.00ns)   --->   "%p_add7_i32_shr = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %tmp_1, i32 2, i32 31)" [fir_src/x_order_fir.cpp:48]   --->   Operation 83 'partselect' 'p_add7_i32_shr' <Predicate = (!tmp)> <Delay = 0.00>

State 13 <SV = 10> <Delay = 8.75>
ST_13 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_s = zext i30 %p_add7_i32_shr to i32" [fir_src/x_order_fir.cpp:48]   --->   Operation 84 'zext' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 85 [7/7] (8.75ns)   --->   "%gmem_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 %tmp_s)" [fir_src/x_order_fir.cpp:48]   --->   Operation 85 'readreq' 'gmem_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 11> <Delay = 8.75>
ST_14 : Operation 86 [6/7] (8.75ns)   --->   "%gmem_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 %tmp_s)" [fir_src/x_order_fir.cpp:48]   --->   Operation 86 'readreq' 'gmem_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 12> <Delay = 8.75>
ST_15 : Operation 87 [5/7] (8.75ns)   --->   "%gmem_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 %tmp_s)" [fir_src/x_order_fir.cpp:48]   --->   Operation 87 'readreq' 'gmem_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 13> <Delay = 8.75>
ST_16 : Operation 88 [4/7] (8.75ns)   --->   "%gmem_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 %tmp_s)" [fir_src/x_order_fir.cpp:48]   --->   Operation 88 'readreq' 'gmem_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 14> <Delay = 8.75>
ST_17 : Operation 89 [3/7] (8.75ns)   --->   "%gmem_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 %tmp_s)" [fir_src/x_order_fir.cpp:48]   --->   Operation 89 'readreq' 'gmem_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 15> <Delay = 8.75>
ST_18 : Operation 90 [2/7] (8.75ns)   --->   "%gmem_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 %tmp_s)" [fir_src/x_order_fir.cpp:48]   --->   Operation 90 'readreq' 'gmem_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 16> <Delay = 8.75>
ST_19 : Operation 91 [1/7] (8.75ns)   --->   "%gmem_addr_1_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %gmem_addr_1, i32 %tmp_s)" [fir_src/x_order_fir.cpp:48]   --->   Operation 91 'readreq' 'gmem_addr_1_rd_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 92 [1/1] (1.76ns)   --->   "br label %burst.rd.header9" [fir_src/x_order_fir.cpp:48]   --->   Operation 92 'br' <Predicate = true> <Delay = 1.76>

State 20 <SV = 17> <Delay = 2.49>
ST_20 : Operation 93 [1/1] (0.00ns)   --->   "%indvar1 = phi i30 [ 0, %1 ], [ %indvar_next1, %burst.rd.body10 ]" [fir_src/x_order_fir.cpp:48]   --->   Operation 93 'phi' 'indvar1' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 94 [1/1] (2.46ns)   --->   "%exitcond1 = icmp eq i30 %indvar1, %p_add7_i32_shr" [fir_src/x_order_fir.cpp:48]   --->   Operation 94 'icmp' 'exitcond1' <Predicate = true> <Delay = 2.46> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 95 [1/1] (2.49ns)   --->   "%indvar_next1 = add i30 %indvar1, 1" [fir_src/x_order_fir.cpp:48]   --->   Operation 95 'add' 'indvar_next1' <Predicate = true> <Delay = 2.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 96 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %._crit_edge.loopexit, label %burst.rd.body10" [fir_src/x_order_fir.cpp:48]   --->   Operation 96 'br' <Predicate = true> <Delay = 0.00>

State 21 <SV = 18> <Delay = 8.75>
ST_21 : Operation 97 [1/1] (8.75ns)   --->   "%gmem_addr_1_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %gmem_addr_1)" [fir_src/x_order_fir.cpp:48]   --->   Operation 97 'read' 'gmem_addr_1_read' <Predicate = (!exitcond1)> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 22 <SV = 19> <Delay = 3.25>
ST_22 : Operation 98 [1/1] (0.00ns)   --->   "%burstread_rbegin1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_s) nounwind" [fir_src/x_order_fir.cpp:48]   --->   Operation 98 'specregionbegin' 'burstread_rbegin1' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_22 : Operation 99 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str9)" [fir_src/x_order_fir.cpp:48]   --->   Operation 99 'specpipeline' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_22 : Operation 100 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([59 x i8]* @memcpy_OC_x_order_fi)" [fir_src/x_order_fir.cpp:48]   --->   Operation 100 'specloopname' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_22 : Operation 101 [1/1] (0.00ns)   --->   "%indvar2 = zext i30 %indvar1 to i64" [fir_src/x_order_fir.cpp:48]   --->   Operation 101 'zext' 'indvar2' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_22 : Operation 102 [1/1] (0.00ns)   --->   "%coef_addr = getelementptr [1024 x i32]* @coef, i64 0, i64 %indvar2" [fir_src/x_order_fir.cpp:48]   --->   Operation 102 'getelementptr' 'coef_addr' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_22 : Operation 103 [1/1] (3.25ns)   --->   "store i32 %gmem_addr_1_read, i32* %coef_addr, align 4" [fir_src/x_order_fir.cpp:48]   --->   Operation 103 'store' <Predicate = (!exitcond1)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_22 : Operation 104 [1/1] (0.00ns)   --->   "%burstread_rend18 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_s, i32 %burstread_rbegin1) nounwind" [fir_src/x_order_fir.cpp:48]   --->   Operation 104 'specregionend' 'burstread_rend18' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_22 : Operation 105 [1/1] (0.00ns)   --->   "br label %burst.rd.header9" [fir_src/x_order_fir.cpp:48]   --->   Operation 105 'br' <Predicate = (!exitcond1)> <Delay = 0.00>

State 23 <SV = 18> <Delay = 1.76>
ST_23 : Operation 106 [1/1] (0.00ns)   --->   "br label %._crit_edge"   --->   Operation 106 'br' <Predicate = (!tmp)> <Delay = 0.00>
ST_23 : Operation 107 [1/1] (1.76ns)   --->   "br label %2" [fir_src/x_order_fir.cpp:52]   --->   Operation 107 'br' <Predicate = true> <Delay = 1.76>

State 24 <SV = 19> <Delay = 5.80>
ST_24 : Operation 108 [1/1] (0.00ns)   --->   "%i1 = phi i32 [ %i, %._crit_edge ], [ %i_1, %3 ]"   --->   Operation 108 'phi' 'i1' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 109 [1/1] (0.00ns)   --->   "%acc = phi i32 [ 0, %._crit_edge ], [ %acc_2, %3 ]"   --->   Operation 109 'phi' 'acc' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 110 [1/1] (2.47ns)   --->   "%tmp_2 = icmp eq i32 %i1, 0" [fir_src/x_order_fir.cpp:52]   --->   Operation 110 'icmp' 'tmp_2' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 111 [1/1] (0.00ns)   --->   "br i1 %tmp_2, label %4, label %3" [fir_src/x_order_fir.cpp:52]   --->   Operation 111 'br' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 112 [1/1] (2.55ns)   --->   "%i_1 = add nsw i32 %i1, -1" [fir_src/x_order_fir.cpp:55]   --->   Operation 112 'add' 'i_1' <Predicate = (!tmp_2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 113 [1/1] (0.00ns)   --->   "%tmp_6 = sext i32 %i_1 to i64" [fir_src/x_order_fir.cpp:55]   --->   Operation 113 'sext' 'tmp_6' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_24 : Operation 114 [1/1] (0.00ns)   --->   "%shift_reg_addr = getelementptr inbounds [1024 x i32]* @shift_reg, i64 0, i64 %tmp_6" [fir_src/x_order_fir.cpp:55]   --->   Operation 114 'getelementptr' 'shift_reg_addr' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_24 : Operation 115 [2/2] (3.25ns)   --->   "%shift_reg_load = load i32* %shift_reg_addr, align 4" [fir_src/x_order_fir.cpp:55]   --->   Operation 115 'load' 'shift_reg_load' <Predicate = (!tmp_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_24 : Operation 116 [1/1] (0.00ns)   --->   "%tmp_7 = sext i32 %i1 to i64" [fir_src/x_order_fir.cpp:55]   --->   Operation 116 'sext' 'tmp_7' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_24 : Operation 117 [1/1] (0.00ns)   --->   "%coef_addr_1 = getelementptr inbounds [1024 x i32]* @coef, i64 0, i64 %tmp_7" [fir_src/x_order_fir.cpp:55]   --->   Operation 117 'getelementptr' 'coef_addr_1' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_24 : Operation 118 [2/2] (3.25ns)   --->   "%coef_load_1 = load i32* %coef_addr_1, align 4" [fir_src/x_order_fir.cpp:55]   --->   Operation 118 'load' 'coef_load_1' <Predicate = (!tmp_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>

State 25 <SV = 20> <Delay = 6.50>
ST_25 : Operation 119 [1/2] (3.25ns)   --->   "%shift_reg_load = load i32* %shift_reg_addr, align 4" [fir_src/x_order_fir.cpp:55]   --->   Operation 119 'load' 'shift_reg_load' <Predicate = (!tmp_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_25 : Operation 120 [1/2] (3.25ns)   --->   "%coef_load_1 = load i32* %coef_addr_1, align 4" [fir_src/x_order_fir.cpp:55]   --->   Operation 120 'load' 'coef_load_1' <Predicate = (!tmp_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>
ST_25 : Operation 121 [1/1] (0.00ns)   --->   "%shift_reg_addr_1 = getelementptr inbounds [1024 x i32]* @shift_reg, i64 0, i64 %tmp_7" [fir_src/x_order_fir.cpp:56]   --->   Operation 121 'getelementptr' 'shift_reg_addr_1' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_25 : Operation 122 [1/1] (3.25ns)   --->   "store i32 %shift_reg_load, i32* %shift_reg_addr_1, align 4" [fir_src/x_order_fir.cpp:56]   --->   Operation 122 'store' <Predicate = (!tmp_2)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>

State 26 <SV = 21> <Delay = 8.51>
ST_26 : Operation 123 [1/1] (8.51ns)   --->   "%tmp_8 = mul nsw i32 %coef_load_1, %shift_reg_load" [fir_src/x_order_fir.cpp:55]   --->   Operation 123 'mul' 'tmp_8' <Predicate = (!tmp_2)> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 22> <Delay = 2.55>
ST_27 : Operation 124 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @p_str7) nounwind" [fir_src/x_order_fir.cpp:52]   --->   Operation 124 'specloopname' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_27 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([10 x i8]* @p_str7)" [fir_src/x_order_fir.cpp:52]   --->   Operation 125 'specregionbegin' 'tmp_4' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_27 : Operation 126 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:53]   --->   Operation 126 'specpipeline' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_27 : Operation 127 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 10, i32 1023, i32 516, [1 x i8]* @p_str1) nounwind" [fir_src/x_order_fir.cpp:54]   --->   Operation 127 'speclooptripcount' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_27 : Operation 128 [1/1] (2.55ns)   --->   "%acc_2 = add nsw i32 %tmp_8, %acc" [fir_src/x_order_fir.cpp:55]   --->   Operation 128 'add' 'acc_2' <Predicate = (!tmp_2)> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 129 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([10 x i8]* @p_str7, i32 %tmp_4)" [fir_src/x_order_fir.cpp:57]   --->   Operation 129 'specregionend' 'empty' <Predicate = (!tmp_2)> <Delay = 0.00>
ST_27 : Operation 130 [1/1] (0.00ns)   --->   "br label %2" [fir_src/x_order_fir.cpp:52]   --->   Operation 130 'br' <Predicate = (!tmp_2)> <Delay = 0.00>

State 28 <SV = 20> <Delay = 3.25>
ST_28 : Operation 131 [2/2] (3.25ns)   --->   "%coef_load = load i32* getelementptr inbounds ([1024 x i32]* @coef, i64 0, i64 0), align 16" [fir_src/x_order_fir.cpp:59]   --->   Operation 131 'load' 'coef_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>

State 29 <SV = 21> <Delay = 3.25>
ST_29 : Operation 132 [1/2] (3.25ns)   --->   "%coef_load = load i32* getelementptr inbounds ([1024 x i32]* @coef, i64 0, i64 0), align 16" [fir_src/x_order_fir.cpp:59]   --->   Operation 132 'load' 'coef_load' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>

State 30 <SV = 22> <Delay = 8.51>
ST_30 : Operation 133 [1/1] (0.00ns)   --->   "%empty_4 = call { i32, i1, i1 } @_ssdm_op_Read.axis.volatile.i32P.i1P.i1P(i32* %x_data, i1* %x_user_V, i1* %x_last_V)"   --->   Operation 133 'read' 'empty_4' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_30 : Operation 134 [1/1] (0.00ns)   --->   "%x_data_tmp = extractvalue { i32, i1, i1 } %empty_4, 0"   --->   Operation 134 'extractvalue' 'x_data_tmp' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 135 [1/1] (0.00ns)   --->   "%x_user_V_tmp = extractvalue { i32, i1, i1 } %empty_4, 1"   --->   Operation 135 'extractvalue' 'x_user_V_tmp' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 136 [1/1] (0.00ns)   --->   "%x_last_V_tmp = extractvalue { i32, i1, i1 } %empty_4, 2"   --->   Operation 136 'extractvalue' 'x_last_V_tmp' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 137 [1/1] (8.51ns)   --->   "%tmp_3 = mul nsw i32 %coef_load, %x_data_tmp" [fir_src/x_order_fir.cpp:59]   --->   Operation 137 'mul' 'tmp_3' <Predicate = true> <Delay = 8.51> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 8.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 138 [1/1] (3.25ns)   --->   "store i32 %x_data_tmp, i32* getelementptr inbounds ([1024 x i32]* @shift_reg, i64 0, i64 0), align 16" [fir_src/x_order_fir.cpp:60]   --->   Operation 138 'store' <Predicate = true> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1024> <RAM>

State 31 <SV = 23> <Delay = 2.55>
ST_31 : Operation 139 [1/1] (2.55ns)   --->   "%acc_1 = add nsw i32 %tmp_3, %acc" [fir_src/x_order_fir.cpp:59]   --->   Operation 139 'add' 'acc_1' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 140 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i1P.i1P(i32* %y_data, i1* %y_user_V, i1* %y_last_V, i32 %acc_1, i1 %x_user_V_tmp, i1 %x_last_V_tmp)" [fir_src/x_order_fir.cpp:59]   --->   Operation 140 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 32 <SV = 24> <Delay = 0.00>
ST_32 : Operation 141 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i32P.i1P.i1P(i32* %y_data, i1* %y_user_V, i1* %y_last_V, i32 %acc_1, i1 %x_user_V_tmp, i1 %x_last_V_tmp)" [fir_src/x_order_fir.cpp:59]   --->   Operation 141 'write' <Predicate = true> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_32 : Operation 142 [1/1] (0.00ns)   --->   "ret void" [fir_src/x_order_fir.cpp:66]   --->   Operation 142 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'ctrl' [12]  (1 ns)

 <State 2>: 8.75ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr') [16]  (0 ns)
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:43) [34]  (8.75 ns)

 <State 3>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:43) [34]  (8.75 ns)

 <State 4>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:43) [34]  (8.75 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:43) [34]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:43) [34]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:43) [34]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:43) [34]  (8.75 ns)

 <State 9>: 1.56ns
The critical path consists of the following:
	'phi' operation ('indvar', fir_src/x_order_fir.cpp:43) with incoming values : ('indvar_next', fir_src/x_order_fir.cpp:43) [39]  (0 ns)
	'add' operation ('indvar_next', fir_src/x_order_fir.cpp:43) [42]  (1.56 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (fir_src/x_order_fir.cpp:43) [48]  (8.75 ns)

 <State 11>: 0.698ns
The critical path consists of the following:
	'select' operation ('fir_ctrl[1]', fir_src/x_order_fir.cpp:43) [50]  (0.698 ns)

 <State 12>: 3.45ns
The critical path consists of the following:
	'icmp' operation ('tmp', fir_src/x_order_fir.cpp:47) [55]  (2.47 ns)
	blocking operation 0.978 ns on control path)

 <State 13>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:48) [62]  (8.75 ns)

 <State 14>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:48) [62]  (8.75 ns)

 <State 15>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:48) [62]  (8.75 ns)

 <State 16>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:48) [62]  (8.75 ns)

 <State 17>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:48) [62]  (8.75 ns)

 <State 18>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:48) [62]  (8.75 ns)

 <State 19>: 8.75ns
The critical path consists of the following:
	bus request on port 'gmem' (fir_src/x_order_fir.cpp:48) [62]  (8.75 ns)

 <State 20>: 2.49ns
The critical path consists of the following:
	'phi' operation ('indvar1', fir_src/x_order_fir.cpp:48) with incoming values : ('indvar_next1', fir_src/x_order_fir.cpp:48) [65]  (0 ns)
	'add' operation ('indvar_next1', fir_src/x_order_fir.cpp:48) [67]  (2.49 ns)

 <State 21>: 8.75ns
The critical path consists of the following:
	bus read on port 'gmem' (fir_src/x_order_fir.cpp:48) [74]  (8.75 ns)

 <State 22>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('coef_addr', fir_src/x_order_fir.cpp:48) [75]  (0 ns)
	'store' operation (fir_src/x_order_fir.cpp:48) of variable 'gmem_addr_1_read', fir_src/x_order_fir.cpp:48 on array 'coef' [76]  (3.25 ns)

 <State 23>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('fir_ctrl[1]', fir_src/x_order_fir.cpp:43) ('i', fir_src/x_order_fir.cpp:55) [84]  (1.77 ns)

 <State 24>: 5.81ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('fir_ctrl[1]', fir_src/x_order_fir.cpp:43) ('i', fir_src/x_order_fir.cpp:55) [84]  (0 ns)
	'add' operation ('i', fir_src/x_order_fir.cpp:55) [93]  (2.55 ns)
	'getelementptr' operation ('shift_reg_addr', fir_src/x_order_fir.cpp:55) [95]  (0 ns)
	'load' operation ('shift_reg_load', fir_src/x_order_fir.cpp:55) on array 'shift_reg' [96]  (3.25 ns)

 <State 25>: 6.51ns
The critical path consists of the following:
	'load' operation ('shift_reg_load', fir_src/x_order_fir.cpp:55) on array 'shift_reg' [96]  (3.25 ns)
	'store' operation (fir_src/x_order_fir.cpp:56) of variable 'shift_reg_load', fir_src/x_order_fir.cpp:55 on array 'shift_reg' [103]  (3.25 ns)

 <State 26>: 8.51ns
The critical path consists of the following:
	'mul' operation ('tmp_8', fir_src/x_order_fir.cpp:55) [100]  (8.51 ns)

 <State 27>: 2.55ns
The critical path consists of the following:
	'add' operation ('acc', fir_src/x_order_fir.cpp:55) [101]  (2.55 ns)

 <State 28>: 3.25ns
The critical path consists of the following:
	'load' operation ('coef_load', fir_src/x_order_fir.cpp:59) on array 'coef' [111]  (3.25 ns)

 <State 29>: 3.25ns
The critical path consists of the following:
	'load' operation ('coef_load', fir_src/x_order_fir.cpp:59) on array 'coef' [111]  (3.25 ns)

 <State 30>: 8.51ns
The critical path consists of the following:
	axis read on port 'x_data' [107]  (0 ns)
	'mul' operation ('tmp_3', fir_src/x_order_fir.cpp:59) [112]  (8.51 ns)

 <State 31>: 2.55ns
The critical path consists of the following:
	'add' operation ('acc', fir_src/x_order_fir.cpp:59) [113]  (2.55 ns)

 <State 32>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
